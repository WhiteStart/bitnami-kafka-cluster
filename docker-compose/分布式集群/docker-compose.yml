version: '3'

networks:
  zookeeper-kafka:
    external: true
    driver: overlay

services:
  zookeeper1:
    image: docker.io/bitnami/zookeeper:3.8
    hostname: zookeeper1
    ports:
      - '2181:2181'
    volumes:
      - 'zookeeper1_data:/bitnami'
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.role == master
    environment:
      - ZOO_SERVERS=0.0.0.0:2888:3888;zookeeper2:2888:3888;zookeeper3:2888:3888
      - ZOO_ENABLE_AUTH=yes
      - ZOO_SERVER_USERS=user
      - ZOO_SERVER_PASSWORDS=password
      - ZOO_CLIENT_USER=user
      - ZOO_CLIENT_PASSWORD=password
      - ZOO_SERVER_ID=1
      - quorumListenOnAllIPs=true
    networks:
      - zookeeper-kafka

  zookeeper2:
    image: docker.io/bitnami/zookeeper:3.8
    hostname: zookeeper2
    ports:
      - '2182:2181'
    volumes:
      - 'zookeeper2_data:/bitnami'
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.role == node01
    environment:
      - ZOO_SERVERS=zookeeper1:2888:3888;0.0.0.0:2888:3888;zookeeper3:2888:3888
      - ZOO_ENABLE_AUTH=yes
      - ZOO_SERVER_USERS=user
      - ZOO_SERVER_PASSWORDS=password
      - ZOO_CLIENT_USER=user
      - ZOO_CLIENT_PASSWORD=password
      - ZOO_SERVER_ID=2
      - quorumListenOnAllIPs=true
    networks:
      - zookeeper-kafka
      
  zookeeper3:
    image: docker.io/bitnami/zookeeper:3.8
    hostname: zookeeper3
    ports:
      - '2183:2181'
    volumes:
      - 'zookeeper3_data:/bitnami'
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.role == node02
    environment:
      - ZOO_SERVERS=zookeeper1:2888:3888;zookeeper2:2888:3888;0.0.0.0:2888:3888
      - ZOO_ENABLE_AUTH=yes
      - ZOO_SERVER_USERS=user
      - ZOO_SERVER_PASSWORDS=password
      - ZOO_CLIENT_USER=user
      - ZOO_CLIENT_PASSWORD=password
      - ZOO_SERVER_ID=3
      - quorumListenOnAllIPs=true
    networks:
      - zookeeper-kafka

  kafka1:
    image: docker.io/bitnami/kafka:3.4
    ports:
      - '9092:9092'
      - '9093:9093'
      - '9094:9094'
    volumes:
      - 'kafka3_data:/bitnami'
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.role == master
    environment:
      - BITNAMI_DEBUG=yes
      - KAFKA_ENABLE_KRAFT=no
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      - KAFKA_ZOOKEEPER_PROTOCOL=SASL
      - KAFKA_ZOOKEEPER_USER=user
      - KAFKA_ZOOKEEPER_PASSWORD=password
      - KAFKA_CFG_SASL_ENABLED_MECHANISMS=SCRAM-SHA-256
      - KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL=SCRAM-SHA-256
      - KAFKA_CLIENT_USERS=user
      - KAFKA_CLIENT_PASSWORDS=password
      - KAFKA_INTER_BROKER_USER=user
      - KAFKA_INTER_BROKER_PASSWORD=password
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka1:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:SASL_PLAINTEXT,CONTROLLER:SASL_PLAINTEXT,EXTERNAL:SASL_PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
    networks:
      - zookeeper-kafka
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3

  kafka2:
    image: docker.io/bitnami/kafka:3.4
    ports:
      - '9095:9092'
      - '9096:9093'
      - '9097:9094'
    volumes:
      - 'kafka2_data:/bitnami'
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.role == node01
    environment:
      - BITNAMI_DEBUG=yes
      - KAFKA_ENABLE_KRAFT=no
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      - KAFKA_ZOOKEEPER_PROTOCOL=SASL
      - KAFKA_ZOOKEEPER_USER=user
      - KAFKA_ZOOKEEPER_PASSWORD=password
      - KAFKA_CFG_SASL_ENABLED_MECHANISMS=SCRAM-SHA-256
      - KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL=SCRAM-SHA-256
      - KAFKA_CLIENT_USERS=user
      - KAFKA_CLIENT_PASSWORDS=password
      - KAFKA_INTER_BROKER_USER=user
      - KAFKA_INTER_BROKER_PASSWORD=password
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka2:9092,EXTERNAL://localhost:9097
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:SASL_PLAINTEXT,CONTROLLER:SASL_PLAINTEXT,EXTERNAL:SASL_PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
    networks:
      - zookeeper-kafka
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3

  kafka3:
    image: docker.io/bitnami/kafka:3.4
    ports:
      - '9098:9092'
      - '9099:9093'
      - '9100:9094'
    volumes:
      - 'kafka3_data:/bitnami'
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.role == node02
    environment:
      - BITNAMI_DEBUG=yes
      - KAFKA_ENABLE_KRAFT=no
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      - KAFKA_ZOOKEEPER_PROTOCOL=SASL
      - KAFKA_ZOOKEEPER_USER=user
      - KAFKA_ZOOKEEPER_PASSWORD=password
      - KAFKA_CFG_SASL_ENABLED_MECHANISMS=SCRAM-SHA-256
      - KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL=SCRAM-SHA-256
      - KAFKA_CLIENT_USERS=user
      - KAFKA_CLIENT_PASSWORDS=password
      - KAFKA_INTER_BROKER_USER=user
      - KAFKA_INTER_BROKER_PASSWORD=password
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka3:9092,EXTERNAL://localhost:9100
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:SASL_PLAINTEXT,CONTROLLER:SASL_PLAINTEXT,EXTERNAL:SASL_PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
    networks:
      - zookeeper-kafka
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3

volumes:
  zookeeper1_data:
    driver: local
  zookeeper2_data:
    driver: local
  zookeeper3_data:
    driver: local
  kafka1_data:
    driver: local
  kafka2_data:
    driver: local
  kafka3_data:
    driver: local

